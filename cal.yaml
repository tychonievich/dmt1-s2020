Special Dates:
  Courses begin: 2020-01-13
  Courses end: 2020-04-28
  Add deadline: 2020-01-27
  Drop deadline: 2020-02-24
  Withdraw deadline: 2020-03-16
  MLK break: 2020-01-20
  Spring recess:
    start: 2020-03-07
    end: 2020-03-18

meta:
  timezone: America/New_York
  name: DMT1
  lecture exam: true
  home: https://www.cs.virginia.edu/luther/DMT1/S2020/
  final:
    start: 2020-04-30 09:00:00
    duration: 180
    room: Rice 130

sections:
  CS2102-003a:
    type: lecture
    room: Rice 130
    days: [Monday, Wednesday]
    start: 10:00:00
    duration: 50
  CS2102-003b:
    type: lab
    room: Rice 130
    days: [Friday]
    start: 10:00:00
    duration: 50



office hours:
  .begin: 2020-01-21
  faculty:
    Tychonievich:
      where: <https://virginia.zoom.us/j/847054967>
      when:
        - dow: Monday
          start: 15:00:00
          end: 16:00:00
        - dow: Tuesday
          start: 10:00:00
          end: 11:00:00
        - dow: Wednesday
          start: 11:00:00
          end: 12:00:00
        - dow: Thursday
          start: 14:00:00
          end: 15:00:00
  TA:
    where: zoom or meet
    Abrar:
      when:
        - dow: Thursday
          start: 11:00:00
          end: 12:00:00
        - dow: Thursday
          start: 15:30:00
          end: 17:30:00
    Sarah:
      when:
        - dow: Thursday
          start: 11:00:00
          end: 14:00:00
    Annie:
      when:
        - dow: Tuesday
          start: 17:00:00
          end: 18:00:00
        - dow: Thursday
          start: 14:00:00
          end: 17:00:00
        - dow: Friday
          start: 11:00:00
          end: 12:00:00
    Nathaniel:
      when:
        - dow: Thursday
          start: 15:30:00
          end: 17:30:00
    Zachary:
      when:
        - dow: Sunday
          start: 19:00:00
          end: 20:40:00
        - dow: Monday
          start: 13:00:00
          end: 13:50:00
        - dow: Tuesday
          start: 13:55:00
          end: 14:55:00
        - dow: Wednesday
          start: 13:00:00
          end: 13:50:00
        - dow: Thursday
          start: 13:55:00
          end: 16:45:00
    Emily:
      when:
        - dow: Wednesday
          start: 11:00:00
          end: 13:00:00
        - dow: Friday
          start: 17:00:00
          end: 20:00:00
    Jack:
      when:
        - dow: Thursday
          start: 11:00:00
          end: 13:50:00
    Nurani:
      when:
        - dow: Tuesday
          start: 15:00:00
          end: 17:00:00
        - dow: Wednesday
          start: 14:00:00
          end: 16:00:00
        - dow: Thursday
          start: 17:00:00
          end: 19:00:00



lectures:
    - welcome
    - real maths
    - truth tables

    - equivalence rules
    - equivalence proofs

    - predicates
    - quantifiers

    - [direct proof, proof by cases]
    - [direct proof, proof by cases]
    
    - sets
    - sets

    - induction
    - induction

    - primes
    - contradiction

    - summation
    - combination

    - permutation
    - permutation

    - functions
    - functions

    - logs
    - logs
    
    - state machines
    - state machines




labs:
    - [propositions, operators]
    - lab01
    - lab02
    - lab03
    - lab04
    - lab05
    - lab06
    - lab07
    - sequences
    - lab08
    - lab09
    - lab10
    - lab11
    - review


reading:
    
    lab01:
      - txt: list of symbols
        lnk: symbols.html
      - txt: lab
        lnk: files/lab01.pdf
      - txt: lab key
        lnk: files/lab01-key.pdf
      - txt: quiz
        lnk: files/quiz01.pdf
      - txt: key
        lnk: files/quiz01-key.pdf
        
    lab02:
      - txt: lab
        lnk: files/lab02.pdf
      - txt: lab key
        lnk: files/lab02-key.pdf
      - txt: quiz
        lnk: files/quiz02.pdf
      - txt: key
        lnk: files/quiz02-key.pdf

    lab03:
      - txt: list of symbols
        lnk: symbols.html
      - txt: lab
        lnk: files/lab03.pdf
      - txt: lab key
        lnk: files/lab03-key.pdf
      - txt: quiz
        lnk: files/quiz03.pdf
      - txt: key
        lnk: files/quiz03-key.pdf


    lab04:
      - txt: lab
        lnk: files/lab04.pdf
      - txt: lab key
        lnk: files/lab04-key.pdf
      - txt: quiz
        lnk: files/quiz04.pdf
      - txt: key
        lnk: files/quiz04-key.pdf

    lab05:
      - txt: lab
        lnk: files/lab05.pdf
      - txt: lab key
        lnk: files/lab05-key.pdf
      - txt: quiz
        lnk: files/quiz05.pdf
      - txt: key
        lnk: files/quiz05-key.pdf

    lab06:
      - txt: lab
        lnk: files/lab06.pdf
      - txt: lab key
        lnk: files/lab06-key.pdf
      - txt: quiz
        lnk: files/quiz06.pdf
      - txt: key
        lnk: files/quiz06-key.pdf

    lab07:
      - txt: lab
        lnk: files/lab07.pdf
      - txt: lab key
        lnk: files/lab07-key.pdf
      - txt: quiz
        lnk: files/quiz07.pdf
      - txt: quiz key
        lnk: files/quiz07-key.pdf


    lab08:
      - txt: lab
        lnk: files/lab08.pdf
      - txt: lab key
        lnk: files/lab08-key.pdf
      - txt: quiz
        lnk: files/quiz08.pdf
      - txt: quiz key
        lnk: files/quiz08-key.pdf

    lab09:
      - txt: lab
        lnk: files/lab09.pdf
      - txt: lab key
        lnk: files/lab09-key.pdf
      - txt: quiz
        lnk: files/quiz09.pdf
      - txt: quiz key
        lnk: files/quiz09-key.pdf

    lab10:
      - txt: lab
        lnk: files/lab10.pdf
      - txt: lab key
        lnk: files/lab10-key.pdf

    lab11: []
    lab12: []

    welcome: 
      - "MCS Introduction"
      - "∀x 1.0"
      - txt: on proofs
        lnk: proofs.html
    real maths:
        lnk: https://medium.com/@jeremyjkun/habits-of-highly-mathematical-people-b719df12d15e
        txt: six habits
    propositions:
        - "MCS 1.1"
        - "∀x 4.3"
    operators:
        - "MCS 3–3.2.0"
        - "∀x 5"
    truth tables:
        - "MCS 3.2.1–3.2.2"
        - "∀x 8, 10"
    
    equivalence rules:
        - "MCS 3.3–3.4"
        - "∀x 11.2"
        - lnk: "axioms.html"
          txt: "equivalences"
    equivalence proofs:
        - "MCS 3.4.2"
        - "∀x 14–15"
        - lnk: "axioms.html"
          txt: "equivalences"
        - lnk: "demorgan.html"
          txt: "example proof"
        - lnk: "techniques-q2.html"
          txt: "proof techniques"
        - lnk: "direct.html"
          txt: "direct proof"
        
    predicates:
        - "MCS 1.2"
        - "∀x 21.0–21.3"
        - "skim MCS 4.1.0"
    quantifiers:
        - {txt: write-up of class examples, lnk: eng2quant.html}
        - "∀x 21.4–24"
        - "MCS 3.6"
        - "skim ∀x 25–26"
        - "practice exercises in ∀x 22 and 23"
    sets:
        - lnk: "sets.html"
          txt: "sets writeup"
        - lnk: "set-practice.html"
          txt: "practice"
        - "MCS 4.1.1"
    
    direct proofs:
        - "MCS 1.2–1.6"
        - "∀x 16"
        - "∀x 32–33"
        - "skim ∀x 37"
        - {lnk: "direct.html", txt: "direct proof"}
    proof by cases:
        - "MCS 1.7"
        - "∀x 15.6"
        - {txt: techniques, lnk: techniques-q4.html}
    
    
    data types:
        - "MCS 4.1–4.4"
        - txt: "MCS 4 addenda"
          lnk: "chap4.html"

    sequences:
        - "MCS 4.2"
        - txt: "MCS 4.2 addenda"
          lnk: "seq.html"
    
    cardinality:
        - "MCS 4.5"
        - "MCS 7.1"
        - txt: pigeonhole principle
          lnk: https://en.wikipedia.org/wiki/Pigeonhole_principle

    contradiction:
        - "MCS 1.8"
        - "MCS 2"
        - txt: irrationals
          lnk: irrationality.html
        - txt: open sets
          lnk: openset.html

    induction:
        - "MCS 2"
        - "MCS 5.1–5.3"
        - txt: addendum
          lnk: induction.html
    
    summation:
        - "MCS 13.0–13.2"

    combination:
        - "MCS 14.5"
    
    permutation:
        - "MCS 14.0—14.6"
    
    counting proofs:
        - "MCS 14.0—14.6"
        - "MCS 13.0–13.2"
        - txt: reductions writeup
          lnk: reducibility.html
        - txt: proof techniques
          lnk: techniques-q8.html
    
    graphs:
        - "MCS 9"
    state machines:
        - "MCS 5.4"
    primes:
        - "MCS 8.0–8.7"
    functions:
        - "MCS 4.3–4.4"
    logs:
        - txt: wikipedia
          lnk: https://en.m.wikipedia.org/wiki/Logarithm
    review:
        - txt: topic breakdown
          lnk: lectures/topics.txt

    make-up:
        - txt: quiz
          lnk: files/quiz12.pdf

assignments:
    ".groups":
        OQ:
            portion: "30"
            link: https://kytos.cs.virginia.edu/dmt1/quizzes/
        IQ:
            portion: "70"
        Final:
            portion: "0"
    
    dryrun:
        open: 2020-03-25 10:00:00
        due: 2020-03-25 10:50:00
        link: https://kytos.cs.virginia.edu/dmt1/quizzes/
    dryrun-1:
        open: 2020-03-25 10:00:00
        due: 2020-03-25 10:50:00
        hide: true
    dryrun-2:
        open: 2020-03-25 10:00:00
        due: 2020-03-25 10:50:00
        hide: true
    
    IQ01:
        due: 2020-01-24 10:50:00
        weight: 0
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - (IQ01-1) have keys and expressions
                - (IQ01-1) correct logical syntax
                - (IQ01-1) q1 is "prep → do well"
                - (IQ01-1) q2 is "fight ∧ look"
                - (IQ01-1) q3 is "(perf ∨ staff) → (early ⊕ on-time)"
                - (IQ01-1) q4 contains "(midget ∨ giant) → (size ∧ shop)"
                - (IQ01-1) q4 contains "∧ never-met"
                - (IQ01-2) answers in logic (not code) syntax
                - (IQ01-2) q5 is "a ∧ ¬b"
                - (IQ01-2) q6 is "¬a ∨ b" and/or "¬(a ∧ ¬b)"
                - (IQ01-2) q8 ↔ column is 1010 0101
                - (IQ01-2) q8 → column is 1101 1101
                - (IQ01-2) q8 ⊕ column is xor of other two (0111 1000)
    IQ01-1:
        due: 2020-01-24 10:50:00
        hide: true
        weight: 8
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - have keys and expressions
                - correct logical syntax
                - q1 is "prep → do well"
                - q2 is "fight ∧ look"
                - q3 is "(perf ∨ staff) → (early ⊕ on-time)"
                - q4 contains "(midget ∨ giant) → (size ∧ shop)"
                - q4 contains "∧ never-met"
    IQ01-2:
        due: 2020-01-24 10:50:00
        hide: true
        weight: 7
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - answers in logic (not code) syntax
                - q5 is "a ∧ ¬b"
                - q6 is "¬a ∨ b" and/or "¬(a ∧ ¬b)"
                - q8 ↔ column is 1010 0101
                - q8 → column is 1101 1101
                - q8 ⊕ column is xor of other two (0111 1000)
    IQ02:
        due: 2020-01-31 10:50:00
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - correct logic syntax
                - q1 is simple English
                - q1 means "like iff questing"
                - q2 has key
                - q2 means "¬(hurt ∨ tired) → win"
                - q3 shows non-equivalence
                - q3 either a counter-example or a derivation
                - q4 goes from one to other
                - q4 labels rules
                - q4 applies rules correctly
    IQ03:
        due: 2020-02-07 10:50:00
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - (IQ03-1) q1 "something" as ∃ x . F(x)
                - (IQ03-1) q1 and q3 "nothing" as ∄ x . G(x)
                - (IQ03-1) q2 "some" as ∃x . P(x) ∧ Q(x)
                - (IQ03-1) q2 and q3 "all" as ∀x . Q(x) → R(x)
                - (IQ03-1) q3 "no" as ∄x . Q(x) ∧ P(x)
                - (IQ03-2) q4 ∄x . M(x) ∧ A(x)
                - (IQ03-2) q5 ∀x . […] → L(s,x)
                - (IQ03-2) q5 both A(x) and L(x,h) in antecedent
                - (IQ03-2) q6 ∀x . ∃y .
                - (IQ03-2) q6 z(x) → (L(x,y) ∧ L(y,x))

    IQ03-1:
        due: 2020-02-07 10:50:00
        hide: true
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q1 "something" as ∃ x . F(x)
                - q1 and q3 "nothing" as ∄ x . G(x)
                - q2 "some" as ∃x . P(x) ∧ Q(x)
                - q2 and q3 "all" as ∀x . Q(x) → R(x)
                - q3 "no" as ∄x . Q(x) ∧ P(x)
    IQ03-2:
        due: 2020-02-07 10:50:00
        hide: true
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q4 ∄x . M(x) ∧ A(x)
                - q5 ∀x . […] → L(s,x)
                - q5 both A(x) and L(x,h) in antecedent
                - q6 ∀x . ∃y .
                - q6 z(x) → (L(x,y) ∧ L(y,x))

    IQ04:
        due: 2020-02-14 10:50:00
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - (IQ04-1) q1 has symbol key, including "known by" and "me"
                - (IQ04-1) q1 ∃ person ∀ people, people knows person
                - (IQ04-1) q1 ... and me knows person
                - (IQ04-1) q2 expressed in prose
                - (IQ04-1) q2 roughly follows outline
                - (IQ04-2) q3 same expression on every underlined blank
                - (IQ04-2) q4 valid logic
                - (IQ04-2) q5 valid logic
                - (IQ04-2) q4 and q5 expressed in prose
    IQ04-1:
        hide: true
        due: 2020-02-14 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q1 has symbol key, including "known by" and "me"
                - q1 ∃ person ∀ people, people knows person
                - q1 ... and person knows me
                - q2 expressed in prose
                - q2 roughly follows outline
    IQ04-2:
        hide: true
        due: 2020-02-14 10:50:00
        weight: 4
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q3 same expression on every underlined blank
                - q4 valid logic
                - q5 valid logic
                - q4 and q5 expressed in prose
    IQ05:
        due: 2020-02-21 10:50:00
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q1 is {{}, {3}, {4}, {3, 4}}
                - q2 is {1, 2, 3, 4, 5} with no duplicates
                - q3 is {2}
                - q4 has all of A and none of B (i.e., {1, 4})
                - q5 is {{}, {3}}
                - q6 is a set of natural numbers = {1,2}
                - q7 is a subset of B = {2}
                - q8 is a set of sets = {{2,4}, {3,4}}
                - q9-11 is 3, 8, 16
                - q12-14 is ⊥, ⊤, ⊥
    IQ06:
        due: 2020-02-28 10:50:00
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - base case is f(0) = 0
                - inductive step assumption is f(x-1) = (x-1)(x)
                - inductive step follows outline
                - written in prose
                - labels cases and principle of induction
                - base case is f(0) terminates
                - inductive step makes assumption
                - inductive step appeals to f(x-1) termination
                - no logical errors
                - readable (prose and/or symbolic math)
    IQ06-1:
        hide: true
        due: 2020-02-28 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - base case is f(0) = 0
                - inductive step assumption is f(x-1) = (x-1)(x)
                - inductive step follows outline
                - written in prose
                - labels cases and principle of induction
    IQ06-2:
        hide: true
        due: 2020-02-28 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - base case is f(0) terminates
                - inductive step makes assumption
                - inductive step appeals to f(x-1) termination
                - no logical errors
                - readable (prose and/or symbolic math)
    IQ07:
        due: 2020-03-06 10:50:00
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - (IQ07-1) q1 quantifiers (some rabbits that all (yellow) snakes)
                - (IQ07-1) q1 logic (yellow snakes don't eat)
                - {name: (IQ07-1) 18 = 2×3×3, weight: 0.5}
                - {name: (IQ07-1) 81 = 3×3×3×3, weight: 0.5}
                - (IQ07-1) 2^20 × 3^40
                - '(IQ07-1) {1, 3, 7, 9}'
                - (IQ07-2) assume 7/3 is integer
                - (IQ07-2) algebra to get contradiction
                - (IQ07-2) .. which means assumption wrong
                - (IQ07-2) no logical errors
                - (IQ07-2) readable (prose and/or symbolic math)


    IQ07-1:
        hide: true
        due: 2020-03-06 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q1 quantifiers (some rabbits that all (yellow) snakes)
                - q1 logic (yellow snakes don't eat)
                - {name: 18 = 2×3×3, weight: 0.5}
                - {name: 81 = 3×3×3×3, weight: 0.5}
                - 2^20 × 3^40
                - '{1, 3, 7, 9}'
    IQ07-2:
        hide: true
        due: 2020-03-06 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - assume 7/3 is integer
                - algebra to get contradiction
                - .. which means assumption wrong
                - no logical errors
                - readable (prose and/or symbolic math)

    IQ08:
        due: 2020-03-27 10:50:00
        weight: 0
    IQ09:
        due: 2020-04-03 10:50:00
        link: https://kytos.cs.virginia.edu/dmt1/quizzes/
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - (IQ09-1) q1 2^10
                - (IQ09-1) q2 10 choose 6
                - (IQ09-1) q3 26 * 36^5
                - (IQ09-1) q4 6/6^3
                - (IQ09-1) q5 6!/2! - 1
                - (IQ09-2) base case includes n=0
                - (IQ09-2) base case logic right
                - (IQ09-2) inductive step assumes at some n
                - (IQ09-2) algebra correct
                - (IQ09-2) proof correct

    IQ09-1:
        hide: true
        due: 2020-04-03 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - q1 2^10
                - q2 10 choose 6
                - q3 26 * 36^5
                - q4 6/6^3
                - q5 6!/2! - 1
    IQ09-2:
        hide: true
        due: 2020-04-03 10:50:00
        weight: 5
        rubric: 
            kind: hybrid
            auto-weight: 0
            auto-late-days: 0
            late-penalty: 1
            human:
                - base case includes n=0
                - base case logic right
                - inductive step assumes at some n
                - algebra correct
                - proof correct

    IQ10:
        due: 2020-04-10 10:50:00
    IQ11:
        due: 2020-04-17 10:50:00
    IQ12:
        due: 2020-04-27 10:50:00
        weight: 0

    OQ00:
        due: 2020-01-22 08:30:00
        weight: 0
    OQ01:
        due: 2020-01-27 08:30:00
        weight: 0
    OQ02:
        due: 2020-02-03 08:30:00
    OQ03:
        due: 2020-02-10 08:30:00
    OQ05:
        due: 2020-02-24 08:30:00
    OQ06:
        due: 2020-03-02 08:30:00
    OQ07:
        due: 2020-03-20 08:30:00
    OQ08:
        due: 2020-03-30 08:30:00
    OQ09:
        due: 2020-04-06 08:30:00
    OQ10:
        due: 2020-04-13 08:30:00
    OQ11:
        due: 2020-04-20 08:30:00
        
